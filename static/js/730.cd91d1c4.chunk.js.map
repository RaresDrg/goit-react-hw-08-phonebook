{"version":3,"file":"static/js/730.cd91d1c4.chunk.js","mappings":"uKAAO,IAAMA,EACX,mE,SC0BF,EAxBmB,SAAHC,GAAwC,IAAlCC,EAAID,EAAJC,KAAMC,EAAIF,EAAJE,KAAMC,EAAOH,EAAPG,QAASC,EAAKJ,EAALI,MACnCC,ECgBY,WAGlB,IAHiC,IAAdC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACtBG,EAAK,GACLC,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWR,IAC3CA,KACLI,GAAMX,EAA0B,GAAdY,EAAML,IAE1B,OAAOI,CACT,CDvBkBK,GAEhB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAASf,EAAQa,SAAEhB,KAC1BiB,EAAAA,EAAAA,KAAA,SACElB,KAAMA,EACNC,KAAMA,EACNQ,GAAIL,EACJF,QAASA,GAAW,KACpBC,MAAOA,GAAS,KAChBiB,aAAa,KACbC,UAAQ,MAIhB,C,uDEnBA,MAA4B,6B,SCc5B,EAZkB,SAAHtB,GAAkB,IAAZuB,EAAIvB,EAAJuB,KACnB,OACEJ,EAAAA,EAAAA,KAAA,UAAQK,UAAWC,EAAkBxB,KAAK,SAAQiB,SAC/CK,GAGP,C,iKCuCA,EAtCkB,WAChB,IAAMG,GAAWC,EAAAA,EAAAA,MAiBjB,OAfsBC,EAAAA,EAAAA,KAAdC,WAgBCV,EAAAA,EAAAA,KAACW,EAAAA,EAAc,CAAAZ,SAAC,cAIvBC,EAAAA,EAAAA,KAAA,WAASK,UAAWC,EAAAA,EAAAA,YAAmBP,UACrCF,EAAAA,EAAAA,MAAA,OAAKQ,UAAWC,EAAAA,EAAAA,UAAiBP,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WAEJF,EAAAA,EAAAA,MAAA,QAAMe,SAtBS,SAAAC,GACnBA,EAAMC,iBAEN,IAAMC,EAAOF,EAAMG,OAEbC,EAAQF,EAAKG,SAASD,MAAME,MAC5BC,EAAWL,EAAKG,SAASE,SAASD,MAExCZ,GAASc,EAAAA,EAAAA,IAAM,CAAEJ,MAAAA,EAAOG,SAAAA,KAExBL,EAAKO,OACP,EAWmCvB,SAAA,EAC3BC,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAACzC,KAAK,QAAQC,KAAK,WAC9BiB,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAACzC,KAAK,WAAWC,KAAK,cAEjCiB,EAAAA,EAAAA,KAACwB,EAAAA,EAAS,CAACpB,KAAK,iBAK1B,EChCA,EAV4B,WAG1B,OAFuBK,EAAAA,EAAAA,KAAfgB,YAGCzB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAQ,CAACC,GAAG,eAGf3B,EAAAA,EAAAA,KAAC4B,EAAS,GACnB,C,qBCXA,KAAgB,UAAY,6BAA6B,YAAc,+B","sources":["../node_modules/nanoid/url-alphabet/index.js","components/common/InputField/InputField.jsx","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/common/SubmitBtn/SubmitBtn.module.css?ecdf","components/common/SubmitBtn/SubmitBtn.jsx","pages/LoginPage/LoginPage.jsx","pages/LoginPage/RestrictedLoginPage/RestrictedLoginPage.jsx","webpack://react-homework-template/./src/components/Phonebook/Phonebook.module.css?3a02"],"sourcesContent":["export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\n\nconst InputField = ({ type, name, pattern, title }) => {\n  const inputId = nanoid();\n\n  return (\n    <>\n      <label htmlFor={inputId}>{name}</label>\n      <input\n        type={type}\n        name={name}\n        id={inputId}\n        pattern={pattern || null}\n        title={title || null}\n        autoComplete=\"on\"\n        required\n      />\n    </>\n  );\n};\n\nInputField.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default InputField;\n","import { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"submitBtn\":\"SubmitBtn_submitBtn__4n7HF\"};","import PropTypes from 'prop-types';\nimport styles from './SubmitBtn.module.css';\n\nconst SubmitBtn = ({ text }) => {\n  return (\n    <button className={styles.submitBtn} type=\"submit\">\n      {text}\n    </button>\n  );\n};\n\nSubmitBtn.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default SubmitBtn;\n","import styles from '../../components/Phonebook/Phonebook.module.css';\n\nimport InputField from 'components/common/InputField/InputField';\nimport SubmitBtn from 'components/common/SubmitBtn/SubmitBtn';\nimport FallbackLoader from 'components/common/FallbackLoader/FallbackLoader';\n\nimport useAuth from 'hooks/useAuth';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../redux/auth/operations';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n\n  const { isLoading } = useAuth();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.target;\n\n    const email = form.elements.email.value;\n    const password = form.elements.password.value;\n\n    dispatch(logIn({ email, password }));\n\n    form.reset();\n  };\n\n  if (isLoading) {\n    return <FallbackLoader>Login...</FallbackLoader>;\n  }\n\n  return (\n    <section className={styles.authSection}>\n      <div className={styles.phonebook}>\n        <h2>Login</h2>\n\n        <form onSubmit={handleSubmit}>\n          <InputField type=\"email\" name=\"email\" />\n          <InputField type=\"password\" name=\"password\" />\n\n          <SubmitBtn text=\"Login\" />\n        </form>\n      </div>\n    </section>\n  );\n};\n\nexport default LoginPage;\n","import { Navigate } from 'react-router-dom';\nimport useAuth from '../../../hooks/useAuth';\nimport LoginPage from '../LoginPage';\n\nconst RestrictedLoginPage = () => {\n  const { isLoggedIn } = useAuth();\n\n  if (isLoggedIn) {\n    return <Navigate to=\"/contacts\" />;\n  }\n\n  return <LoginPage />;\n};\n\nexport default RestrictedLoginPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"Phonebook_phonebook__A8MMG\",\"authSection\":\"Phonebook_authSection__5PUBC\"};"],"names":["urlAlphabet","_ref","type","name","pattern","title","inputId","size","arguments","length","undefined","id","bytes","crypto","getRandomValues","Uint8Array","nanoid","_jsxs","_Fragment","children","_jsx","htmlFor","autoComplete","required","text","className","styles","dispatch","useDispatch","useAuth","isLoading","FallbackLoader","onSubmit","event","preventDefault","form","target","email","elements","value","password","logIn","reset","InputField","SubmitBtn","isLoggedIn","Navigate","to","LoginPage"],"sourceRoot":""}